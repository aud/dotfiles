#!/usr/bin/env ruby

require 'open3'
require 'fileutils'

# 1. Download homebrew
# 2. Running brew bundle (partly for many only - casks)
# 3. Symlink stuff
# 4. Source .bashrc
# 5. Source .system (for mac only)
# 6. Do some stuff to change default shell to bash?

PACKAGES = %w(
  bash
  bash-completion2
  tmux
  vim
  neovim
  git
  reattach-to-user-namespace
  ripgrep
  python3
  ruby
  go
  openssl
  pkg-config
  htop
  ffmpeg
  coreutils
  fzf
)

CASKS = %w(
  slack-beta
  iterm2-beta
  google-chrome-beta
)

module Utils
  # Common installation utilities

  class << self
    # Check if command exists
    def cmd_exists?(cmd)
      *, status = run_cmd("which #{cmd}", silent: true)
      status.success?
    end

    # Shell command out to system and output stdout, stderr
    def run_cmd(cmd, silent: false)
      puts "Running `#{cmd}`"

      Open3.popen3(cmd) do |_stdin, stdout, stderr, wait_thr|
        out, err = ""

        while line = stdout.gets
          out = line
          puts line unless silent
        end
        while line = stderr.gets
          err = line
          puts line unless silent
        end

        return out, err, wait_thr.value
      end
    end
  end
end

def task(name)
  puts "[start] #{name}"
  yield
  puts "[finish] #{name}"
end

def darwin?
  uname, * = Utils.run_cmd("uname", silent: true)
  uname.strip == "Darwin"
end

def linux?
  uname, * = Utils.run_cmd("uname", silent: true)
  uname.strip == "Linux"
end

def install_brew
  task("brew") do
    unless Utils.cmd_exists?("zbrew")
      Utils.run_cmd('/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"')

      # Add to path if Linux
      # https://docs.brew.sh/Homebrew-on-Linux
      if linux?
        Utils.run_cmd("test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)")
        Utils.run_cmd("test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)")
        Utils.run_cmd('test -r ~/.bash_profile && echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.bash_profile')
        Utils.run_cmd('echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile')
      end

      if darwin?
        # non-darwin setups assumed to be headless
        CASKS.each do |cask|
          Utils.run_cmd("brew install #{cask} --cask")
        end
      end

      PACKAGES.each do |package|
        Utils.run_cmd("brew install #{package}")
      end
    end
  end
end

def setup_symlinks
  task("symlinks") do
    dotfiles = Dir.entries(".").select do |file|
      file.start_with?(".")
    end.reject do |file|
      file == "." || file == ".." || file == ".git" || file == ".config"
    end

    dotfiles.each do |dotfile|
      task("symlinking #{dotfile}") do
        from = "#{Dir.pwd}/#{dotfile}"
        to = "#{File.expand_path('~')}/#{dotfile}"

        FileUtils.ln_s(from, to, force: true)
      end
    end
  end
end

# install_brew
setup_symlinks

# set -euox pipefail

# cd $HOME
# git clone https://github.com/aud/dotfiles
# cd dotfiles

# if ! command -v brew >/dev/null 2>&1; then
#   /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
# fi

# if test -f 'Brewfile' && command -v brew bundle check >/dev/null 2>&1; then
#   brew bundle
# fi

# . './symlink.sh'
# . './.bashrc'
